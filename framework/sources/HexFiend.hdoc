// Header documentation for HexFiend.framework

/*!
@framework HexFiend framework
@abstract An Objective-C API for working with large files.
@discussion

HexFiend.framework is an Objective-C framework for displaying and manipulating potentially large amounts of raw binary data.  It is geared towards writing a hex editor but it can be adapted for many uses.  Class names in HexFiend.framework start with a prefix of HF.

HexFiend is designed to handle more data than can fit in memory.  It uses the unsigned long long type pervasively.  The HFRange struct type is analagous to NSRange, but contains unsigned long longs.

Hex Fiend relies heavily on a model-view-controller design.  Unlike most Cocoa controls, it is not (yet) possible to simply make a view and give it some data to display.  Data is always kept externally to the view.  You must create a controller and model, and hook them together to provide data to the view.

There are two principal model classes: HFByteArray and HFByteSlice.  HFByteSlice represents a portion of some source of random access binary data.  By subclassing HFByteSlice, you can enable new sources of random-access binary data to be viewed in Hex Fiend.  HFByteArray is logically a list of ByteSlices and represents the current state of the document.



*/